using com.sun.org.apache.xml.@internal.serializer.utils;
using Cookie.Handlers.Connection;
using Cookie.Handlers.Game.Achievement;
using Cookie.Handlers.Game.Alliance;
using Cookie.Handlers.Game.Almanach;
using Cookie.Handlers.Game.Approach;
using Cookie.Handlers.Game.Basic;
using Cookie.Handlers.Game.Character.Choice;
using Cookie.Handlers.Game.Character.Stats;
using Cookie.Handlers.Game.Chat;
using Cookie.Handlers.Game.Chat.Channel;
using Cookie.Handlers.Game.Chat.Community;
using Cookie.Handlers.Game.Context;
using Cookie.Handlers.Game.Context.Mount;
using Cookie.Handlers.Game.Context.Notification;
using Cookie.Handlers.Game.Context.Roleplay;
using Cookie.Handlers.Game.Context.Roleplay.Emote;
using Cookie.Handlers.Game.Context.Roleplay.Fight.Arena;
using Cookie.Handlers.Game.Context.Roleplay.Havenbag;
using Cookie.Handlers.Game.Context.Roleplay.Houses;
using Cookie.Handlers.Game.Context.Roleplay.Job;
using Cookie.Handlers.Game.Context.Roleplay.Quest;
using Cookie.Handlers.Game.Dare;
using Cookie.Handlers.Game.Friend;
using Cookie.Handlers.Game.Guild;
using Cookie.Handlers.Game.Idol;
using Cookie.Handlers.Game.Initialization;
using Cookie.Handlers.Game.Interactive;
using Cookie.Handlers.Game.Inventory.Items;
using Cookie.Handlers.Game.Inventory.Spells;
using Cookie.Handlers.Game.Prism;
using Cookie.Handlers.Game.Pvp;
using Cookie.Handlers.Game.Shortcut;
using Cookie.Handlers.Game.Startup;
using Cookie.Handlers.Handshake;
using Cookie.Handlers.Queues;
using Cookie.Handlers.Secure;
using Cookie.Handlers.Security;
using Cookie.Handlers.Server.Basic;
using Cookie.Handlers.Web.Ankabox;
using Cookie.IO;
using Cookie.Utils.Extensions;
using System;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Windows.Forms;

namespace Cookie.Core
{
    public class DofusClient : Client
    {
        #region Variables
        public static readonly string[] DofusIPs = { "127.0.0.1"};
        public static readonly short[] DofusPorts = {  5555 };

        public static string RandomIP = DofusIPs.RandomElementOrDefault();
        public static short RandomPort = DofusPorts.RandomElementOrDefault();
        Dispatcher dispatcher;

        public Account Account { get; set; }
        public bool Debug = false;
        #endregion
        #region Constructor
        public DofusClient(string Login, string Password) : base(RandomIP, RandomPort)
        {
            dispatcher = new Dispatcher(this);

            Account = new Account(Login, Password);

            // Register Handlers
            Register(typeof(HandshakeHandlers));
            Register(typeof(QueuesHandlers));
            Register(typeof(SecurityHandlers));
            Register(typeof(ConnectionHandlers));
            Register(typeof(GameApproachHandlers));
            Register(typeof(GameBasicHandlers));
            Register(typeof(GameCharacterChoiceHandlers));
            Register(typeof(SecureHandlers));
            Register(typeof(GameContextNotificationHandlers));
            Register(typeof(GameInitializationHandlers));
            Register(typeof(GameContextMountHandlers));
            Register(typeof(GameInventoryItemsHandlers));
            Register(typeof(GameShortcutHandlers));
            Register(typeof(GameContextRoleplayHavenbagHandlers));
            Register(typeof(GameContextRoleplayEmoteHandlers));
            Register(typeof(GameContextRoleplayHandlers));
            Register(typeof(GameChatHandlers));
            Register(typeof(GameContextRoleplayJobHandlers));
            Register(typeof(GamePvpHandlers));
            Register(typeof(GameGuildHandlers));
            Register(typeof(GameDareHandlers));
            Register(typeof(GamePrismHandlers));
            Register(typeof(GameChatChannelHandlers));
            Register(typeof(GameChatCommunityHandlers));
            Register(typeof(GameInventorySpellsHandlers));
            Register(typeof(GameFriendHandlers));
            Register(typeof(GameAchievementHandlers));
            Register(typeof(GameAllianceHandlers));
            Register(typeof(GameContextRoleplayQuestHandlers));
            Register(typeof(GameCharacterStatsHandlers));
            Register(typeof(GameContextRoleplayFightArenaHandlers));
            Register(typeof(GameAlmanachHandlers));
            Register(typeof(GameIdolHandlers));
            Register(typeof(WebAnkaboxHandlers));
            Register(typeof(GameStartupHandlers));
            Register(typeof(GameContextRoleplayHousesHandlers));
            Register(typeof(GameContextHandlers));
            Register(typeof(ServerBasicHandlers));
            Register(typeof(GameInteractiveHandlers));
            Debug = true;


            //Cookie.Protocol.Network.Messages.InventoryContentMessage message = new Cookie.Protocol.Network.Messages.InventoryContentMessage();
            //Cookie.IO.CustomDataReader reader = new Cookie.IO.CustomDataReader(new byte[] { 0x00, 0xAB, 0x00, 0x3F, 0xEE, 0xEA, 0x01, 0x00, 0x00, 0xF6, 0xF1, 0xE0, 0x06, 0x04, 0x00, 0x3F, 0xB9, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xED, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA2, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xFC, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x9D, 0x9D, 0x01, 0x00, 0x01, 0x00, 0x46, 0x84, 0x16, 0xE8, 0x07, 0x8E, 0x85, 0xE3, 0x06, 0x09, 0x00, 0x3F, 0xAB, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xEB, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xF0, 0xF0, 0x01, 0x00, 0x00, 0xEC, 0x9B, 0xDF, 0x06, 0x0F, 0x00, 0x3F, 0xC0, 0x84, 0x01, 0x00, 0x00, 0xD4, 0xCA, 0xBA, 0x06, 0x01, 0x00, 0x3F, 0x8E, 0x39, 0x00, 0x00, 0x86, 0xC3, 0xB9, 0x06, 0x05, 0x00, 0x3F, 0xE1, 0x83, 0x01, 0x00, 0x00, 0xD0, 0xBF, 0xB9, 0x06, 0x01, 0x00, 0x3F, 0xC0, 0x72, 0x00, 0x00, 0x9F, 0xFC, 0xB9, 0x06, 0x01, 0x00, 0x3F, 0xAF, 0x02, 0x00, 0x00, 0xE4, 0xB1, 0xBD, 0x06, 0x6C, 0x00, 0x3F, 0xC0, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xEE, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xC7, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xEF, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xD5, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF1, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xDE, 0x84, 0x01, 0x00, 0x00, 0xA3, 0xE4, 0xA3, 0x06, 0x01, 0x00, 0x3F, 0xB3, 0xEA, 0x01, 0x00, 0x00, 0xD9, 0xD1, 0xB9, 0x06, 0x04, 0x00, 0x3F, 0xE3, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF3, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xEA, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF4, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xF1, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF5, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xF8, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF6, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xDC, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF2, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xB2, 0x6E, 0x00, 0x0C, 0x00, 0x46, 0x7D, 0xBC, 0x02, 0x00, 0x46, 0x7E, 0x38, 0x00, 0x46, 0x7C, 0x21, 0x00, 0x46, 0x73, 0x05, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0xB0, 0x01, 0x13, 0x00, 0x46, 0xA8, 0x03, 0x0B, 0x00, 0x46, 0xAA, 0x03, 0x0E, 0x00, 0x46, 0xAC, 0x03, 0x0B, 0x00, 0x46, 0xA1, 0x01, 0x07, 0x00, 0x46, 0xF2, 0x05, 0x10, 0x00, 0x46, 0xA4, 0x03, 0x12, 0xFA, 0xA3, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0xB7, 0xEA, 0x01, 0x00, 0x00, 0x9C, 0xC2, 0xA4, 0x06, 0x06, 0x00, 0x3F, 0xFF, 0xEE, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF7, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x86, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF8, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x8D, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xF9, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x94, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xFA, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x9B, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xFB, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xD4, 0x72, 0x00, 0x00, 0xF2, 0xF1, 0xE0, 0x06, 0x04, 0x00, 0x3F, 0xF0, 0xF3, 0x01, 0x00, 0x00, 0xB1, 0xDC, 0x9A, 0x06, 0xAE, 0x03, 0x00, 0x3F, 0xA5, 0xEE, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x0A, 0x02, 0x00, 0x46, 0x7D, 0x01, 0xDF, 0xE8, 0x99, 0x06, 0x01, 0x00, 0x0E, 0xCB, 0x7F, 0x00, 0x01, 0x00, 0x46, 0x8A, 0x01, 0x28, 0xC3, 0xBA, 0xA1, 0x06, 0x01, 0x00, 0x02, 0x91, 0x9C, 0x01, 0x00, 0x05, 0x00, 0x46, 0x7D, 0xDE, 0x01, 0x00, 0x46, 0x7B, 0x63, 0x00, 0x46, 0xAA, 0x03, 0x11, 0x00, 0x46, 0xD3, 0x01, 0x0A, 0x00, 0x46, 0x73, 0x04, 0xE1, 0xC4, 0xA0, 0x06, 0x01, 0x00, 0x3F, 0xC1, 0x6B, 0x00, 0x02, 0x00, 0x46, 0x7E, 0x32, 0x00, 0x46, 0x99, 0x01, 0x64, 0xC3, 0xA7, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x83, 0xF3, 0x01, 0x00, 0x01, 0x00, 0x46, 0xEC, 0x04, 0x17, 0xE9, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA1, 0x02, 0x00, 0x00, 0xE3, 0xDE, 0xA0, 0x06, 0x9F, 0x03, 0x00, 0x3F, 0xEA, 0xF2, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x0A, 0x09, 0x00, 0x46, 0x7C, 0x03, 0xC5, 0xC0, 0xD0, 0x06, 0x01, 0x00, 0x03, 0x8F, 0x9C, 0x01, 0x00, 0x09, 0x00, 0x46, 0x7D, 0xE9, 0x02, 0x00, 0x46, 0x76, 0x52, 0x00, 0x46, 0x7C, 0x24, 0x00, 0x46, 0xA6, 0x03, 0x10, 0x00, 0x46, 0xAE, 0x03, 0x12, 0x00, 0x46, 0xD2, 0x01, 0x0A, 0x00, 0x46, 0xD6, 0x01, 0x08, 0x00, 0x46, 0x73, 0x05, 0x00, 0x46, 0x75, 0x01, 0xF4, 0xC4, 0xA0, 0x06, 0x01, 0x00, 0x3F, 0xCF, 0xEE, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x0A, 0x02, 0x00, 0x46, 0x7D, 0x09, 0xAF, 0xF4, 0x99, 0x06, 0x01, 0x00, 0x3F, 0x9D, 0x3C, 0x00, 0x04, 0x00, 0x46, 0xA2, 0x03, 0x0E, 0x00, 0x46, 0x77, 0x2C, 0x00, 0x49, 0x85, 0x16, 0x12, 0x01, 0x26, 0x00, 0x49, 0x83, 0x16, 0x00, 0xA2, 0x04, 0xF4, 0x03, 0xF0, 0xF3, 0x99, 0x06, 0x01, 0x00, 0x3F, 0x82, 0xF3, 0x01, 0x00, 0x01, 0x00, 0x46, 0xEC, 0x04, 0x85, 0x03, 0xE8, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA9, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xFD, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xB0, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xFE, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xB7, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xFF, 0xB6, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xBE, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x80, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xC5, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x81, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xCC, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x82, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xD3, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x83, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xDA, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x84, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xE1, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x85, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xE8, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x86, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xEF, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x87, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xFD, 0xEF, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x89, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x84, 0xF0, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x8A, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x8B, 0xF0, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x8B, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x92, 0xF0, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x8C, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x99, 0xF0, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x8D, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA0, 0xF0, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x8E, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA7, 0xF0, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x8F, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x87, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x91, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x8E, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x92, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x95, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x93, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x9C, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x94, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA3, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x95, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xAA, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x96, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xB1, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x97, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xB8, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x98, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xBF, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x99, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xC6, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x9A, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xCD, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x9B, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xD4, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x9C, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xDB, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x9D, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xE2, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0x9E, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xF0, 0xF2, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA0, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xCE, 0xF3, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA1, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xFA, 0xF3, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA3, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x94, 0xF4, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA4, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x9B, 0xF4, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA5, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA2, 0xF4, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA6, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0xA9, 0xF4, 0x01, 0x00, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xA7, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x87, 0xF1, 0x01, 0x00, 0x12, 0x00, 0x4A, 0xC2, 0x17, 0x00, 0x09, 0x5B, 0x31, 0x35, 0x30, 0x30, 0x38, 0x32, 0x31, 0x5D, 0x00, 0x4A, 0xC4, 0x07, 0x00, 0x05, 0x54, 0x65, 0x6C, 0x65, 0x73, 0x00, 0x46, 0xC2, 0x07, 0xDC, 0x01, 0x00, 0x4A, 0xB8, 0x17, 0x00, 0x06, 0x4A, 0x6F, 0x75, 0x65, 0x75, 0x72, 0x00, 0x48, 0xA5, 0x06, 0xE4, 0x0F, 0x09, 0x0B, 0x13, 0x12, 0x00, 0x4A, 0xC2, 0x17, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x4A, 0xC2, 0x17, 0x00, 0x09, 0x5B, 0x31, 0x35, 0x30, 0x30, 0x38, 0x32, 0x32, 0x5D, 0x00, 0x46, 0xD0, 0x05, 0x00, 0x00, 0x46, 0xB9, 0x17, 0xC7, 0x14, 0x00, 0x46, 0xBA, 0x17, 0x4E, 0x00, 0x46, 0xBB, 0x17, 0x93, 0x2A, 0x00, 0x46, 0xBC, 0x17, 0xBC, 0x98, 0x0D, 0x00, 0x4A, 0xC2, 0x17, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x4A, 0xC2, 0x17, 0x00, 0x09, 0x5B, 0x31, 0x35, 0x30, 0x30, 0x38, 0x32, 0x33, 0x5D, 0x00, 0x46, 0xBD, 0x17, 0x21, 0x00, 0x46, 0xC3, 0x17, 0x0D, 0x00, 0x46, 0xBE, 0x17, 0x03, 0x00, 0x46, 0xBF, 0x17, 0x5F, 0xA8, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x89, 0xF1, 0x01, 0x00, 0x01, 0x00, 0x46, 0xEC, 0x04, 0xB8, 0x01, 0xA9, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x8A, 0xF1, 0x01, 0x00, 0x01, 0x00, 0x46, 0xEC, 0x04, 0xB4, 0x01, 0xAA, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x1C, 0xB0, 0xF4, 0x01, 0x00, 0x01, 0x00, 0x46, 0x7C, 0x0A, 0xAB, 0xB7, 0x98, 0x06, 0x01, 0x00, 0x3F, 0x90, 0x9C, 0x01, 0x00, 0x0B, 0x00, 0x46, 0x7D, 0xC4, 0x02, 0x00, 0x46, 0x7E, 0x5F, 0x00, 0x46, 0x7C, 0x20, 0x00, 0x46, 0xB0, 0x01, 0x0E, 0x00, 0x46, 0xA8, 0x03, 0x10, 0x00, 0x46, 0xD5, 0x01, 0x09, 0x00, 0x46, 0xA1, 0x01, 0x07, 0x00, 0x46, 0xA2, 0x03, 0x0D, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0x73, 0x05, 0x00, 0x46, 0x6F, 0x01, 0xC7, 0xA3, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0xA7, 0x91, 0x01, 0x00, 0x0B, 0x00, 0x46, 0x7D, 0xF4, 0x02, 0x00, 0x46, 0x7E, 0x36, 0x00, 0x46, 0xA5, 0x03, 0x1E, 0x00, 0x46, 0x7C, 0x20, 0x00, 0x46, 0xB0, 0x01, 0x0E, 0x00, 0x46, 0xA8, 0x03, 0x09, 0x00, 0x46, 0xD2, 0x01, 0x06, 0x00, 0x46, 0xD3, 0x01, 0x05, 0x00, 0x46, 0xA0, 0x01, 0x09, 0x00, 0x46, 0xB2, 0x01, 0x09, 0x00, 0x46, 0x73, 0x02, 0xF3, 0xA6, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x9C, 0x3C, 0x00, 0x04, 0x00, 0x46, 0x7B, 0x00, 0x00, 0x46, 0xA2, 0x03, 0x00, 0x00, 0x49, 0x85, 0x16, 0x12, 0x01, 0x01, 0x00, 0x49, 0x83, 0x16, 0x00, 0x01, 0x00, 0xD2, 0x87, 0x9A, 0x06, 0x01, 0x00, 0x3F, 0xC6, 0x96, 0x01, 0x00, 0x0E, 0x00, 0x49, 0x63, 0x29, 0x37, 0x00, 0x00, 0x49, 0x65, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7D, 0xCD, 0x02, 0x00, 0x46, 0x7E, 0x35, 0x00, 0x46, 0xA4, 0x03, 0x15, 0x00, 0x46, 0x7C, 0x1F, 0x00, 0x46, 0xB0, 0x01, 0x0D, 0x00, 0x46, 0xF0, 0x05, 0x07, 0x00, 0x46, 0xA8, 0x03, 0x0D, 0x00, 0x46, 0xD3, 0x01, 0x07, 0x00, 0x46, 0xD4, 0x01, 0x06, 0x00, 0x46, 0x9A, 0x03, 0x07, 0x00, 0x46, 0x73, 0x03, 0x00, 0x46, 0x75, 0x01, 0xF0, 0xA5, 0xBE, 0x06, 0x01, 0x00, 0x07, 0xAC, 0x45, 0x00, 0x0C, 0x00, 0x46, 0x7D, 0xDE, 0x02, 0x00, 0x46, 0x76, 0x46, 0x00, 0x46, 0x7E, 0x46, 0x00, 0x46, 0x7C, 0x28, 0x00, 0x46, 0x70, 0x0A, 0x00, 0x46, 0xD3, 0x01, 0x0A, 0x00, 0x46, 0xD4, 0x01, 0x0A, 0x00, 0x46, 0xD5, 0x01, 0x0A, 0x00, 0x46, 0x75, 0x01, 0x00, 0x46, 0x73, 0x03, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0x98, 0x09, 0xF1, 0x7B, 0x98, 0xF7, 0xA2, 0x06, 0x01, 0x00, 0x3F, 0xCD, 0x72, 0x00, 0x00, 0x83, 0xE7, 0xA2, 0x06, 0x01, 0x00, 0x3F, 0x83, 0xF1, 0x01, 0x00, 0x00, 0xF6, 0xE0, 0xA0, 0x06, 0x86, 0x03, 0x00, 0x3F, 0xAC, 0x45, 0x00, 0x0A, 0x00, 0x46, 0x7D, 0x98, 0x02, 0x00, 0x46, 0x76, 0x42, 0x00, 0x46, 0x7E, 0x37, 0x00, 0x46, 0x7C, 0x24, 0x00, 0x46, 0x70, 0x07, 0x00, 0x46, 0xD3, 0x01, 0x09, 0x00, 0x46, 0xD4, 0x01, 0x06, 0x00, 0x46, 0xD5, 0x01, 0x09, 0x00, 0x46, 0x75, 0x01, 0x00, 0x46, 0x73, 0x03, 0x88, 0xC0, 0xA0, 0x06, 0x01, 0x00, 0x3F, 0x90, 0x5C, 0x00, 0x10, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0x77, 0x3E, 0x00, 0x46, 0x7B, 0x34, 0x00, 0x46, 0x76, 0x3D, 0x00, 0x46, 0x7E, 0x33, 0x00, 0x46, 0xD4, 0x01, 0x07, 0x00, 0x46, 0xD3, 0x01, 0x08, 0x00, 0x46, 0xD5, 0x01, 0x07, 0x00, 0x46, 0xD2, 0x01, 0x08, 0x00, 0x46, 0x75, 0x01, 0x00, 0x46, 0xAC, 0x03, 0x05, 0x00, 0x46, 0xAA, 0x03, 0x04, 0x00, 0x46, 0xA8, 0x03, 0x05, 0x00, 0x46, 0xA6, 0x03, 0x03, 0x00, 0x46, 0xD4, 0x05, 0x3B, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x9E, 0xC1, 0xA0, 0x06, 0x01, 0x00, 0x09, 0xCD, 0x7F, 0x00, 0x02, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0x7D, 0x32, 0xA0, 0xC6, 0xA0, 0x06, 0x01, 0x00, 0x3F, 0x9B, 0x55, 0x00, 0x02, 0x00, 0x46, 0xD8, 0x07, 0x00, 0x00, 0x46, 0xB0, 0x01, 0x0A, 0xBB, 0xBB, 0x9F, 0x06, 0x01, 0x00, 0x3F, 0xD7, 0x72, 0x00, 0x00, 0xA2, 0xFE, 0xA0, 0x06, 0x10, 0x00, 0x06, 0x87, 0x90, 0x01, 0x00, 0x10, 0x00, 0x46, 0x7D, 0xD9, 0x02, 0x00, 0x46, 0x76, 0x2C, 0x00, 0x46, 0x7E, 0x31, 0x00, 0x46, 0x77, 0x2C, 0x00, 0x46, 0x7B, 0x30, 0x00, 0x46, 0x7C, 0x17, 0x00, 0x46, 0xF1, 0x05, 0x09, 0x00, 0x46, 0xA8, 0x03, 0x07, 0x00, 0x46, 0xAC, 0x03, 0x09, 0x00, 0x46, 0xA6, 0x03, 0x07, 0x00, 0x46, 0xAE, 0x03, 0x09, 0x00, 0x46, 0xAA, 0x03, 0x07, 0x00, 0x46, 0xA0, 0x01, 0x09, 0x00, 0x46, 0x75, 0x02, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0x98, 0x09, 0xF3, 0x7B, 0xB2, 0xC0, 0xA0, 0x06, 0x01, 0x00, 0x3F, 0xEA, 0xF0, 0x01, 0x00, 0x00, 0xE9, 0xF0, 0xA0, 0x06, 0xEF, 0x02, 0x00, 0x3F, 0xD9, 0xEA, 0x01, 0x00, 0x00, 0xEA, 0xF0, 0xA0, 0x06, 0x0C, 0x00, 0x3F, 0xC3, 0xEA, 0x01, 0x00, 0x00, 0xA1, 0xE9, 0xA1, 0x06, 0x07, 0x00, 0x05, 0xB0, 0x96, 0x01, 0x00, 0x0D, 0x00, 0x46, 0x7D, 0xDA, 0x02, 0x00, 0x46, 0x8A, 0x01, 0x30, 0x00, 0x46, 0x7C, 0x27, 0x00, 0x46, 0xF0, 0x05, 0x08, 0x00, 0x46, 0xA8, 0x03, 0x0F, 0x00, 0x46, 0xAC, 0x03, 0x0C, 0x00, 0x46, 0xAA, 0x03, 0x0E, 0x00, 0x46, 0xAE, 0x03, 0x0C, 0x00, 0x46, 0xA6, 0x03, 0x0E, 0x00, 0x46, 0xD4, 0x01, 0x07, 0x00, 0x46, 0xAB, 0x01, 0x0A, 0x00, 0x46, 0x80, 0x01, 0x01, 0x00, 0x46, 0xB0, 0x01, 0x0E, 0xFD, 0xFE, 0xA0, 0x06, 0x01, 0x00, 0x3F, 0xC0, 0x96, 0x01, 0x00, 0x0B, 0x00, 0x46, 0x7D, 0xA1, 0x02, 0x00, 0x46, 0x76, 0x2D, 0x00, 0x46, 0x7E, 0x37, 0x00, 0x46, 0x77, 0x2C, 0x00, 0x46, 0x7C, 0x1B, 0x00, 0x46, 0xA8, 0x03, 0x05, 0x00, 0x46, 0xAC, 0x03, 0x06, 0x00, 0x46, 0xA6, 0x03, 0x05, 0x00, 0x46, 0xAE, 0x03, 0x06, 0x00, 0x46, 0xD3, 0x01, 0x05, 0x00, 0x46, 0xD4, 0x01, 0x06, 0xE1, 0xA6, 0xA1, 0x06, 0x01, 0x00, 0x01, 0x93, 0x8A, 0x01, 0x00, 0x12, 0x00, 0x49, 0x61, 0x10, 0x14, 0x00, 0x00, 0x49, 0x60, 0x10, 0x14, 0x00, 0x00, 0x49, 0x63, 0x10, 0x14, 0x00, 0x00, 0x46, 0x7D, 0x8A, 0x03, 0x00, 0x46, 0x76, 0x25, 0x00, 0x46, 0x7E, 0x2F, 0x00, 0x46, 0x7B, 0x25, 0x00, 0x46, 0x8A, 0x01, 0x0E, 0x00, 0x46, 0x7C, 0x21, 0x00, 0x46, 0xB0, 0x01, 0x0E, 0x00, 0x46, 0xF0, 0x05, 0x0C, 0x00, 0x46, 0xA8, 0x03, 0x09, 0x00, 0x46, 0xA6, 0x03, 0x07, 0x00, 0x46, 0xAE, 0x03, 0x09, 0x00, 0x46, 0xAA, 0x03, 0x07, 0x00, 0x46, 0xD4, 0x01, 0x09, 0x00, 0x46, 0xA2, 0x03, 0x0B, 0x00, 0x46, 0x73, 0x04, 0xF9, 0x8C, 0xA1, 0x06, 0x01, 0x00, 0x0B, 0xCF, 0x7F, 0x00, 0x02, 0x00, 0x46, 0x80, 0x01, 0x01, 0x00, 0x46, 0x8A, 0x01, 0x14, 0x97, 0xBA, 0xA1, 0x06, 0x01, 0x00, 0x3F, 0x81, 0xF2, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x0A, 0x01, 0x00, 0x46, 0x7C, 0x01, 0xE7, 0x98, 0xA3, 0x06, 0x01, 0x00, 0x3F, 0xE2, 0x83, 0x01, 0x00, 0x00, 0xFF, 0xCB, 0xA1, 0x06, 0x01, 0x00, 0x04, 0xD1, 0x5E, 0x00, 0x0E, 0x00, 0x46, 0x7D, 0xFA, 0x01, 0x00, 0x46, 0x7B, 0x3C, 0x00, 0x46, 0x77, 0x3C, 0x00, 0x46, 0x7C, 0x28, 0x00, 0x46, 0x75, 0x01, 0x00, 0x46, 0xAE, 0x01, 0x90, 0x03, 0x00, 0x46, 0xB0, 0x01, 0x0A, 0x00, 0x46, 0xAA, 0x03, 0x0C, 0x00, 0x46, 0xAC, 0x03, 0x0C, 0x00, 0x46, 0xD6, 0x01, 0x07, 0x00, 0x46, 0xD2, 0x01, 0x07, 0x00, 0x46, 0xD5, 0x01, 0x07, 0x00, 0x46, 0xF1, 0x05, 0x05, 0x00, 0x46, 0x80, 0x01, 0x01, 0xD2, 0xBD, 0xA3, 0x06, 0x01, 0x00, 0x3F, 0xBC, 0x34, 0x00, 0x03, 0x00, 0x46, 0xB0, 0x01, 0x6D, 0x00, 0x49, 0x85, 0x16, 0x12, 0x01, 0x5C, 0x00, 0x49, 0x83, 0x16, 0x00, 0xDB, 0xF1, 0x05, 0x90, 0xBF, 0x05, 0x88, 0xE1, 0xA2, 0x06, 0x01, 0x00, 0x3F, 0xBF, 0x63, 0x00, 0x00, 0xD5, 0xD8, 0xA4, 0x06, 0x0D, 0x00, 0x3F, 0xE0, 0x83, 0x01, 0x00, 0x00, 0xC5, 0xC6, 0xA4, 0x06, 0x01, 0x00, 0x3F, 0xD2, 0xF0, 0x01, 0x00, 0x00, 0x9C, 0xC6, 0xA4, 0x06, 0x0A, 0x00, 0x3F, 0xB8, 0x02, 0x00, 0x00, 0x9E, 0xC6, 0xA4, 0x06, 0xDB, 0x03, 0x00, 0x3F, 0xB9, 0x72, 0x00, 0x00, 0xC0, 0xCC, 0xA4, 0x06, 0x01, 0x00, 0x3F, 0xEE, 0x3D, 0x00, 0x00, 0xF0, 0xCE, 0xA4, 0x06, 0x08, 0x00, 0x3F, 0xC7, 0x72, 0x00, 0x00, 0xAD, 0xBC, 0xB9, 0x06, 0x03, 0x00, 0x3F, 0xF4, 0x3D, 0x00, 0x00, 0x92, 0x81, 0xE4, 0x06, 0x02, 0x00, 0x0A, 0xE1, 0x05, 0x00, 0x04, 0x00, 0x46, 0x7D, 0xC8, 0x01, 0x00, 0x46, 0xD8, 0x07, 0x00, 0x00, 0x49, 0x97, 0x09, 0xC9, 0x41, 0x01, 0x00, 0x00, 0x46, 0x0A, 0xB7, 0x01, 0xB8, 0xD4, 0xDF, 0x06, 0x01, 0x00, 0x3F, 0xFE, 0xF1, 0x01, 0x00, 0x00, 0xF5, 0x87, 0xE0, 0x06, 0x01, 0x00, 0x3F, 0x90, 0x9C, 0x01, 0x00, 0x0B, 0x00, 0x46, 0x7D, 0xDF, 0x02, 0x00, 0x46, 0x7E, 0x64, 0x00, 0x46, 0x7C, 0x23, 0x00, 0x46, 0xB0, 0x01, 0x0F, 0x00, 0x46, 0xA8, 0x03, 0x12, 0x00, 0x46, 0xD5, 0x01, 0x0A, 0x00, 0x46, 0xA1, 0x01, 0x08, 0x00, 0x46, 0xA2, 0x03, 0x0F, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0x73, 0x05, 0x00, 0x46, 0x6F, 0x01, 0xF3, 0xD2, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0xF7, 0xEF, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x0A, 0x02, 0x00, 0x46, 0x77, 0x05, 0xAC, 0xA0, 0xAE, 0x06, 0x01, 0x00, 0x3F, 0xD3, 0x8C, 0x01, 0x00, 0x09, 0x00, 0x46, 0x7D, 0xAB, 0x03, 0x00, 0x46, 0x7E, 0x60, 0x00, 0x46, 0x7C, 0x2F, 0x00, 0x46, 0xB0, 0x01, 0x0F, 0x00, 0x46, 0xA8, 0x03, 0x0F, 0x00, 0x46, 0xD6, 0x01, 0x07, 0x00, 0x46, 0xD4, 0x01, 0x06, 0x00, 0x46, 0xB2, 0x01, 0x0F, 0x00, 0x46, 0x80, 0x01, 0x01, 0xE7, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x80, 0xF1, 0x01, 0x00, 0x00, 0x9E, 0xC1, 0xBE, 0x06, 0x95, 0x9D, 0x01, 0x00, 0x3F, 0xC1, 0x84, 0x01, 0x00, 0x00, 0xC4, 0xCA, 0xBA, 0x06, 0x01, 0x00, 0x3F, 0x9E, 0x7F, 0x00, 0x00, 0xAD, 0xC8, 0xBA, 0x06, 0x02, 0x00, 0x3F, 0xC5, 0xEA, 0x01, 0x00, 0x00, 0xD6, 0xB8, 0xBA, 0x06, 0x02, 0x00, 0x3F, 0xCE, 0x3F, 0x00, 0x00, 0xF7, 0xA4, 0xBD, 0x06, 0x06, 0x00, 0x3F, 0xA5, 0x03, 0x00, 0x00, 0xA9, 0xAC, 0xBD, 0x06, 0x88, 0x01, 0x00, 0x3F, 0xBE, 0x7B, 0x00, 0x00, 0x94, 0xFD, 0xBD, 0x06, 0x01, 0x00, 0x3F, 0x81, 0x6E, 0x00, 0x0C, 0x00, 0x46, 0x7D, 0xC2, 0x02, 0x00, 0x46, 0x7E, 0x4F, 0x00, 0x46, 0x77, 0x23, 0x00, 0x46, 0x7C, 0x32, 0x00, 0x46, 0x73, 0x06, 0x00, 0x46, 0xB2, 0x01, 0x07, 0x00, 0x46, 0x75, 0x01, 0x00, 0x46, 0xAE, 0x01, 0xD1, 0x01, 0x00, 0x46, 0xA8, 0x03, 0x09, 0x00, 0x46, 0xD4, 0x01, 0x07, 0x00, 0x46, 0xF0, 0x05, 0x0E, 0x00, 0x46, 0xA2, 0x03, 0x0B, 0xE8, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0xFF, 0x6D, 0x00, 0x0D, 0x00, 0x46, 0x7D, 0x92, 0x02, 0x00, 0x46, 0x7E, 0x64, 0x00, 0x46, 0x77, 0x24, 0x00, 0x46, 0x7C, 0x1F, 0x00, 0x46, 0xB2, 0x01, 0x0A, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0xB0, 0x01, 0x0E, 0x00, 0x46, 0xA8, 0x03, 0x07, 0x00, 0x46, 0xAC, 0x03, 0x09, 0x00, 0x46, 0xF2, 0x01, 0x0B, 0x00, 0x46, 0xD2, 0x01, 0x07, 0x00, 0x46, 0xD3, 0x01, 0x05, 0x00, 0x46, 0x98, 0x09, 0xB5, 0x4B, 0xE9, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x9E, 0x3C, 0x00, 0x04, 0x00, 0x46, 0x8A, 0x01, 0x35, 0x00, 0x46, 0x75, 0x01, 0x00, 0x49, 0x85, 0x16, 0x12, 0x01, 0x4D, 0x00, 0x49, 0x83, 0x16, 0x00, 0xF6, 0xC1, 0x01, 0xBC, 0xB4, 0x01, 0xEA, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x8A, 0x99, 0x01, 0x00, 0x0B, 0x00, 0x49, 0x5E, 0x0C, 0x10, 0x00, 0x00, 0x49, 0x5E, 0x0C, 0x10, 0x00, 0x00, 0x46, 0x7D, 0xCE, 0x02, 0x00, 0x46, 0x7E, 0x41, 0x00, 0x46, 0x7C, 0x26, 0x00, 0x46, 0xA8, 0x03, 0x11, 0x00, 0x46, 0xD6, 0x01, 0x07, 0x00, 0x46, 0xD2, 0x01, 0x05, 0x00, 0x46, 0xA0, 0x01, 0x0F, 0x00, 0x46, 0xB2, 0x01, 0x0A, 0x00, 0x46, 0x73, 0x06, 0xEB, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x0D, 0xC2, 0x6B, 0x00, 0x02, 0x00, 0x46, 0x7E, 0x64, 0x00, 0x46, 0x99, 0x01, 0xC8, 0x01, 0xEC, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0xA7, 0x91, 0x01, 0x00, 0x0B, 0x00, 0x46, 0x7D, 0x87, 0x03, 0x00, 0x46, 0x7E, 0x3B, 0x00, 0x46, 0xA5, 0x03, 0x1E, 0x00, 0x46, 0x7C, 0x23, 0x00, 0x46, 0xB0, 0x01, 0x0F, 0x00, 0x46, 0xA8, 0x03, 0x0B, 0x00, 0x46, 0xD2, 0x01, 0x05, 0x00, 0x46, 0xD3, 0x01, 0x06, 0x00, 0x46, 0xA0, 0x01, 0x07, 0x00, 0x46, 0xB2, 0x01, 0x0B, 0x00, 0x46, 0x73, 0x02, 0xED, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x9F, 0x74, 0x00, 0x0E, 0x00, 0x46, 0x7D, 0x86, 0x02, 0x00, 0x46, 0x7E, 0x2E, 0x00, 0x46, 0x7C, 0x17, 0x00, 0x46, 0x73, 0x03, 0x00, 0x46, 0xD3, 0x01, 0x08, 0x00, 0x46, 0xD4, 0x01, 0x0A, 0x00, 0x46, 0xF1, 0x05, 0x04, 0x00, 0x46, 0xA0, 0x03, 0x1D, 0x00, 0x46, 0xA5, 0x03, 0x19, 0x00, 0x46, 0x75, 0x01, 0x00, 0x46, 0xB0, 0x01, 0x14, 0x00, 0x46, 0xAC, 0x03, 0x06, 0x00, 0x46, 0xA8, 0x03, 0x08, 0x00, 0x46, 0xAA, 0x03, 0x04, 0xEE, 0xD1, 0xBE, 0x06, 0x01, 0x00, 0x3F, 0x95, 0x71, 0x00, 0x01, 0x00, 0x4C, 0xD5, 0x07, 0xF3, 0x99, 0xDB, 0x06, 0x01, 0x00, 0x3F, 0xCD, 0x7A, 0x00, 0x0D, 0x00, 0x46, 0x7D, 0xDE, 0x02, 0x00, 0x46, 0x7E, 0x3C, 0x00, 0x46, 0x7B, 0x3C, 0x00, 0x46, 0xA1, 0x03, 0x14, 0x00, 0x46, 0x7C, 0x28, 0x00, 0x46, 0xF1, 0x05, 0x0F, 0x00, 0x46, 0xA8, 0x03, 0x0C, 0x00, 0x46, 0xAA, 0x03, 0x0C, 0x00, 0x46, 0xD4, 0x01, 0x0A, 0x00, 0x46, 0x9A, 0x03, 0x05, 0x00, 0x46, 0xA2, 0x03, 0x0F, 0x00, 0x46, 0x80, 0x01, 0x01, 0x00, 0x46, 0x6F, 0x01, 0xC6, 0xE1, 0xCC, 0x06, 0x01, 0x00, 0x3F, 0xB4, 0xEE, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x14, 0x11, 0x00, 0x46, 0x7D, 0x06, 0x8A, 0xC1, 0xD0, 0x06, 0x01, 0x00, 0x0C, 0xCC, 0x07, 0x00, 0x03, 0x00, 0x46, 0x7C, 0x3C, 0x00, 0x46, 0xD8, 0x07, 0x00, 0x00, 0x49, 0x97, 0x09, 0xE2, 0x41, 0x01, 0x00, 0xA1, 0xE9, 0xDF, 0x06, 0x01, 0x00, 0x3F, 0xB8, 0x6D, 0x00, 0x09, 0x00, 0x46, 0x7D, 0xAC, 0x01, 0x00, 0x46, 0x7C, 0x28, 0x00, 0x46, 0x76, 0x30, 0x00, 0x46, 0x73, 0x03, 0x00, 0x46, 0xAE, 0x01, 0x9D, 0x02, 0x00, 0x46, 0xA6, 0x03, 0x0A, 0x00, 0x46, 0xF0, 0x01, 0x0C, 0x00, 0x46, 0xD2, 0x01, 0x0A, 0x00, 0x46, 0xD9, 0x01, 0x08, 0x98, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xB8, 0x5A, 0x00, 0x0E, 0x00, 0x46, 0x7D, 0xD3, 0x01, 0x00, 0x46, 0x76, 0x36, 0x00, 0x46, 0x7E, 0x2C, 0x00, 0x46, 0x7C, 0x2F, 0x00, 0x46, 0xB2, 0x01, 0x05, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0xAE, 0x03, 0x05, 0x00, 0x46, 0xA6, 0x03, 0x06, 0x00, 0x46, 0xA8, 0x03, 0x05, 0x00, 0x46, 0xF4, 0x01, 0x06, 0x00, 0x46, 0xF0, 0x01, 0x07, 0x00, 0x46, 0xF3, 0x01, 0x06, 0x00, 0x46, 0xF0, 0x05, 0x05, 0x00, 0x46, 0xA0, 0x03, 0x08, 0x99, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xE0, 0x76, 0x00, 0x09, 0x00, 0x46, 0x7D, 0xBC, 0x01, 0x00, 0x46, 0x8A, 0x01, 0x23, 0x00, 0x46, 0xF0, 0x01, 0x09, 0x00, 0x46, 0xF2, 0x01, 0x07, 0x00, 0x46, 0x7C, 0x2C, 0x00, 0x46, 0xB0, 0x01, 0x11, 0x00, 0x46, 0xD5, 0x01, 0x09, 0x00, 0x46, 0xA2, 0x03, 0x09, 0x00, 0x46, 0x73, 0x03, 0x9A, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0x8E, 0x07, 0x00, 0x06, 0x00, 0x46, 0x7D, 0x28, 0x00, 0x46, 0x77, 0x22, 0x00, 0x46, 0x7C, 0x1D, 0x00, 0x46, 0x70, 0x02, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0x73, 0x03, 0x9B, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xE2, 0x13, 0x00, 0x05, 0x00, 0x46, 0x7D, 0x3C, 0x00, 0x46, 0x7B, 0x32, 0x00, 0x46, 0xB0, 0x01, 0x07, 0x00, 0x46, 0xB2, 0x01, 0x05, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x9C, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xDC, 0x05, 0x00, 0x07, 0x00, 0x46, 0x7C, 0x19, 0x00, 0x46, 0xA9, 0x03, 0x02, 0x00, 0x46, 0xAD, 0x03, 0x02, 0x00, 0x46, 0xA7, 0x03, 0x02, 0x00, 0x46, 0xAB, 0x03, 0x02, 0x00, 0x46, 0x9C, 0x03, 0x02, 0x00, 0x46, 0x9A, 0x03, 0x02, 0x9D, 0xF5, 0xDE, 0x06, 0x02, 0x00, 0x3F, 0xEA, 0x01, 0x00, 0x05, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0x7E, 0x25, 0x00, 0x49, 0x64, 0x10, 0x17, 0x00, 0x00, 0x46, 0x7C, 0x2A, 0x00, 0x46, 0x7D, 0x0B, 0x9E, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xD1, 0x0B, 0x00, 0x03, 0x00, 0x46, 0xAE, 0x01, 0x91, 0x01, 0x00, 0x46, 0x7D, 0x22, 0x00, 0x46, 0x7C, 0x14, 0x9F, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0x8F, 0x36, 0x00, 0x05, 0x00, 0x46, 0x7D, 0x23, 0x00, 0x46, 0x7E, 0x11, 0x00, 0x46, 0x7C, 0x0F, 0x00, 0x46, 0xF0, 0x05, 0x04, 0x00, 0x46, 0xA8, 0x03, 0x03, 0xA0, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xDC, 0x3A, 0x00, 0x0B, 0x00, 0x46, 0x77, 0x1A, 0x00, 0x46, 0x7D, 0x7F, 0x00, 0x46, 0x7B, 0x28, 0x00, 0x46, 0x8A, 0x01, 0x14, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0xAE, 0x01, 0xF4, 0x01, 0x00, 0x46, 0xB0, 0x01, 0x14, 0x00, 0x46, 0xF3, 0x01, 0x06, 0x00, 0x46, 0x73, 0x03, 0x00, 0x46, 0xD5, 0x01, 0x06, 0x00, 0x46, 0xA2, 0x03, 0x0C, 0xA1, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xDB, 0x0B, 0x00, 0x03, 0x00, 0x46, 0x7B, 0x23, 0x00, 0x46, 0xB0, 0x01, 0x0F, 0x00, 0x46, 0xF0, 0x05, 0x04, 0xA2, 0xF5, 0xDE, 0x06, 0x03, 0x00, 0x3F, 0xC3, 0x06, 0x00, 0x09, 0x00, 0x49, 0x64, 0x10, 0x14, 0x00, 0x00, 0x46, 0x7D, 0x32, 0x00, 0x46, 0x9D, 0x01, 0x0A, 0x00, 0x46, 0x9B, 0x01, 0x0A, 0x00, 0x46, 0x9A, 0x01, 0x0A, 0x00, 0x46, 0x98, 0x01, 0x0A, 0x00, 0x46, 0x7C, 0x19, 0x00, 0x46, 0xF1, 0x05, 0x03, 0x00, 0x46, 0xF0, 0x05, 0x04, 0xA5, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xAA, 0x13, 0x00, 0x04, 0x00, 0x46, 0x76, 0x05, 0x00, 0x46, 0x7E, 0x05, 0x00, 0x46, 0x77, 0x05, 0x00, 0x46, 0x7B, 0x05, 0xA6, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xC8, 0x05, 0x00, 0x03, 0x00, 0x46, 0xAE, 0x01, 0x62, 0x00, 0x46, 0x7D, 0x28, 0x00, 0x46, 0x7C, 0x1E, 0xA7, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xF8, 0x71, 0x00, 0x0B, 0x00, 0x49, 0x64, 0x12, 0x19, 0x00, 0x00, 0x49, 0x5B, 0x04, 0x05, 0x00, 0x00, 0x46, 0x7D, 0x75, 0x00, 0x46, 0x7B, 0x26, 0x00, 0x46, 0x7C, 0x11, 0x00, 0x46, 0x73, 0x05, 0x00, 0x46, 0xB6, 0x01, 0x01, 0x00, 0x46, 0xB0, 0x01, 0x13, 0x00, 0x46, 0xAA, 0x03, 0x04, 0x00, 0x46, 0xF1, 0x05, 0x05, 0x00, 0x46, 0xA0, 0x03, 0x07, 0xA8, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0x92, 0x45, 0x00, 0x06, 0x00, 0x49, 0x5D, 0x01, 0x0A, 0x00, 0x00, 0x46, 0x7D, 0x82, 0x02, 0x00, 0x46, 0x77, 0x35, 0x00, 0x46, 0x7C, 0x2B, 0x00, 0x46, 0x70, 0x08, 0x00, 0x46, 0xB0, 0x01, 0x0B, 0xFE, 0xF5, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xDA, 0x40, 0x00, 0x07, 0x00, 0x46, 0x7D, 0x93, 0x01, 0x00, 0x46, 0x7C, 0x24, 0x00, 0x46, 0xB6, 0x01, 0x02, 0x00, 0x46, 0xB0, 0x01, 0x11, 0x00, 0x46, 0xF2, 0x01, 0x06, 0x00, 0x46, 0xF3, 0x01, 0x07, 0x00, 0x46, 0xB2, 0x01, 0x05, 0x80, 0xF6, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xD1, 0x32, 0x00, 0x08, 0x00, 0x46, 0x76, 0x47, 0x00, 0x46, 0x7C, 0x3C, 0x00, 0x46, 0x7E, 0x46, 0x00, 0x46, 0x70, 0x0A, 0x00, 0x46, 0xB0, 0x01, 0x0A, 0x00, 0x46, 0xD4, 0x01, 0x05, 0x00, 0x46, 0xD6, 0x01, 0x04, 0x00, 0x46, 0xD2, 0x01, 0x05, 0x81, 0xF6, 0xDE, 0x06, 0x01, 0x00, 0x3F, 0xA2, 0x0C, 0x00, 0x00, 0xC2, 0x97, 0xDF, 0x06, 0x02, 0x00, 0x3F, 0xB6, 0xEA, 0x01, 0x00, 0x00, 0xA2, 0x9F, 0xDF, 0x06, 0x04, 0x00, 0x3F, 0x8D, 0xF1, 0x01, 0x00, 0x00, 0xA2, 0xBE, 0xDF, 0x06, 0x03, 0x00, 0x3F, 0x85, 0xF1, 0x01, 0x00, 0x00, 0xB4, 0xB7, 0xDF, 0x06, 0x01, 0x00, 0x3F, 0xC9, 0xEA, 0x01, 0x00, 0x00, 0xB2, 0xAE, 0xE5, 0x06, 0x01, 0x00, 0x3F, 0xF3, 0x40, 0x00, 0x00, 0x9C, 0xE3, 0xE3, 0x06, 0x03, 0x00, 0x08, 0xE9, 0x6A, 0x00, 0x04, 0x00, 0x46, 0x73, 0x0F, 0x00, 0x46, 0xA2, 0x03, 0x28, 0x00, 0x49, 0x85, 0x16, 0x12, 0x01, 0x65, 0x00, 0x49, 0x83, 0x16, 0x00, 0x00, 0xBF, 0xFC, 0x0B, 0xCE, 0xA0, 0xE3, 0x06, 0x01, 0x00, 0x00, 0x8E, 0x6E, 0x00, 0x0C, 0x00, 0x46, 0x7D, 0x90, 0x03, 0x00, 0x46, 0x7C, 0x28, 0x00, 0x46, 0x73, 0x06, 0x00, 0x46, 0x8A, 0x01, 0x46, 0x00, 0x46, 0x6F, 0x01, 0x00, 0x46, 0xD2, 0x01, 0x08, 0x00, 0x46, 0xD4, 0x01, 0x08, 0x00, 0x46, 0xA0, 0x01, 0x06, 0x00, 0x46, 0xF1, 0x05, 0x0F, 0x00, 0x46, 0xA2, 0x03, 0x19, 0x00, 0x46, 0xA5, 0x03, 0x12, 0x00, 0x46, 0x75, 0x01, 0xE8, 0x96, 0xE4, 0x06, 0x01, 0x00, 0x3F, 0x9D, 0x9D, 0x01, 0x00, 0x01, 0x00, 0x46, 0x84, 0x16, 0xDC, 0x0B, 0xA0, 0xB0, 0xE4, 0x06, 0x01, 0x00, 0x3F, 0xF5, 0xF3, 0x01, 0x00, 0x02, 0x00, 0x49, 0x83, 0x16, 0x00, 0x64, 0x3B, 0x00, 0x46, 0xB0, 0x01, 0x09, 0x92, 0xE8, 0xEF, 0x06, 0x01, 0x00, 0x3F, 0x80, 0x41, 0x00, 0x00, 0xD0, 0xAB, 0xE5, 0x06, 0x01, 0x00, 0x3F, 0x9D, 0x12, 0x00, 0x02, 0x00, 0x49, 0xC1, 0x01, 0xBB, 0x0D, 0x00, 0x00, 0x00, 0x4C, 0xD5, 0x07, 0xC6, 0xA8, 0xE5, 0x06, 0x03, 0x00, 0x3F, 0xFF, 0xF0, 0x01, 0x00, 0x02, 0x00, 0x49, 0xC5, 0x17, 0x01, 0x01, 0x01, 0x00, 0x4C, 0xD5, 0x07, 0xBD, 0xD4, 0x82, 0x07, 0x01, 0x00, 0x3F, 0x92, 0xF1, 0x01, 0x00, 0x01, 0x00, 0x46, 0xD5, 0x07, 0x00, 0xB1, 0x97, 0x9F, 0x07, 0xF8, 0x0A, 0xA8, 0xDA, 0x03 });
            //message.Deserialize(reader);
        }
        #endregion
        
        #region Methods
        public void Send(NetworkMessage message)
        {

            CustomDataWriter writer = new CustomDataWriter();
            MessagePacking pack = new MessagePacking();
            pack.Pack(message, writer);
            Logger.Log(String.Format("Send(MessageId[{0}]<{1}>)", message.MessageID, BitConverter.ToString(writer.Data).Replace("-","")), LogMessageType.FightLog);
            base.Send(writer.Data);
                MyGlobals.GLOBAL_INSTANCE_ID++;
        }
        protected override void MessageArrived(DataHeader message)
        {
            //if(Debug)
            //    Logger.Log(String.Format("MessageArrived(MessageId[{0}]<{1}>)", message.MessageId, BitConverter.ToString(message.MessageData).Replace("-", "")),LogMessageType.Admin);
            if (message.MessageId == 0)
                return;
            MessagePart currentMessage = new MessagePart(message);
            CustomDataReader reader = new CustomDataReader();
            if (currentMessage.Build(reader))
            {
                CustomDataReader messageDataReader = new CustomDataReader(currentMessage.Data);
                NetworkMessage networkMessage = MessageReceiver.BuildMessage(message.MessageId, messageDataReader);
                if (networkMessage == null)
                    throw new Exception("networkMessage malformed.");
                dispatcher.Dispatch(networkMessage);
                MyGlobals.GLOBAL_INSTANCE_ID++;
            }
            else
                throw new Exception("Could not parse MessageId{" + message.MessageId + "}");

        }
        protected override void Connect()
        {
            base.Connect();
        }
        protected override void Disconnect()
        {
            Account.Character.Status = Utils.Enums.CharacterStatus.Disconnected;
            base.Disconnect();
        }
        public void Register(Type type)
        {
            dispatcher.RegisterFrame(type);
        }
        public void UnRegister(Type type)
        {
            dispatcher.UnRegisterFrame(type);
        }
        #endregion
    }
}
